#3.0 MongoDB and Mongoose
MongoDB를 사용하는 기업은: facebook,google,EA,Nokia등등이 사용한다.
이제 준비는 끝났고 MongoDB를 받으러 가보자.
DB는 많이있지만 크게 두가지로 분류가 된다. SQL과 NoSQL로 나뉘어진다.
MongoDB는 쩐다. MongoDB는 NoSQL로 분류된다.
특징은 규칙이 적고 엄청 유연하다. 많은 부분을 수정할 수 있다. 반면, 어떤 사람들은 규칙이 너무 적고
모든게 너무크고 어떤 부분에서 너무 실험적이어서 싫어한다. 그래서어떤회사는 쓰고 어떤회사는 사용하고 후회한다.
MongoDB는 더 적은 규칙과 더 적은 절차로 작업이 가능한 데이터 베이스 이다.
많은 사람들이 MongoDB를 사용하고있다. 엄청 가볍고 초보자들도 쉽게 다룰수 있기 때문이다. 사용하기 엄청 쉽고 직관적으로 작동한다.
우리가 해야할일은 이 주소로 와서 무언가를 다운로드 받는게 아니다.

홈페이지->MongoCE(Community Edition) 또는 Community Server을 들어간다.
그리고 버전과 OS를 확인하고 다운로드한다,
다 설치가 완료되면 콘솔창에 mongod를 쳐서 잘 설치 되었는지 확인한다.

윈도우 10에서 다운로드 > 설치 후 mongod가 실행되지 않는다면 다음을 따라서 환경변수 추가를 해보세요.
1. [내컴퓨터] 우클릭 > [고급시스템설정] > [환경변수(N)]
2. 시스템변수 리스트 중 'Path'를 선택하고 편집을 선택한 후 'Mongodb의 설치경로￦bin'을 추가
3. vscode 재실행 후 터미널에 'mongod'입력하면 해결된다.

환경변수의 문제였다(해결됨)
이렇게 mongodb를 설치하고나서 mongod 와 mongo 명령어가 동작을 한다면 정상적으로 설치한것이다.
-명령어
$mongo		//몽고db실행
$exit		//몽고db종료
여기 =까지 완료되었다면 Mongo를 JavaScript와 연결해보자. 두가지가 있는데 하나는 MongoDB이고 다른하나는 Javascript의 Node.JS이다.
MongoDB는 C++이나 다른것으로 만들어졌기 때문에 Adapter가 필요하다.
자바스크립트로 코드를 작성하고 싶으면 MongoDB로부터 Instruction을 받아야한다. 그리고 이걸 귀여운 Mongoose가 해줄것이다.
NodeJS를 위한 멋진 MongoDB Object이다.
설치하기 엄청 간단하다.
npm install mongoose라고 치기만 하면된다.
Database를 가지고 이용하려면 mongodb와 mongoose 둘다 필요로한다.

그리고 같은서버에서 다양한 종류의 Database들을 사용할수 있다. 이 강의에서는 한가지만 사용할것이다.
채팅을 만든다면 MongoDB는 적합한 Database가 될것이다. 왜냐하면 생성이 매우 빠르고 엄격하지 않기 때문이다.
자 이제 필요한 두가지가 설치되었으니, 임시로 만들어 놓은 db.js를 지우고 진짜 MongoDB를 연결하자

#3.1 Connecting to MongoDB

우리가 해야할것.
첫번째로 Database에 관련된걸 하고, 어떤 유저에게나 영상을 보고, 검색하고 수정하고 삭제할 수 있게 할것이다.
영상 업로드도 물론이다. 누구나 사용할수 있는 플랫폼 같은것이다. 그리고 CSS를 할것이다. 모든걸 이쁘게 만들고
유저 프로필과 그 외에 엄청 간단한 것들을 위한 마지막 법칙을 추가할것이다. 이 application에서 유저 부분은 엄청 작은 부분이다.

정리
1. Database 관련 작업
2. 누구나 사용할수 있게 만들기(업로드,시청)등등

기능적으로 누구나 사용할수 있게 만들고 Front-end로 가서 좀 더 이쁘게 만들고 마지막에 유저 인증을 추가할것이다.
이제 mongoose가 설치되었고 'dotenv'라는것을 설치할것이다.
-npm install dotenv
그리고 설치가 완료되면 db.js에서
import mongoose from 'mongoose'
라고 입력하자. 그리고 dotenv는 inport하지 않은 상태에서 왜 template가 필요한지 확인을 해보자.
그리고 db.js에서 
mongoose.connect();
라고 입력하자. 여기서 우리한테 요청하는것은 string으로 된 Database이다. 어디에 Database가 저장되어있는지 알려주는것이다.
Database의 URL을 적을것인데 그전에  콘솔창에 'mongo' 를 먼저 해보자. 그리고 콘솔창에 'mongod' 를 실행하자
그리고 포트를 찾자.
2020-06-06T23:14:40.617+0900 I  CONTROL  [initandlisten] MongoDB starting : pid=16512 
port=27017 dbpath=C:\data\db\ 64-bit host=DESKTOP-I58M2RT 
여기서 port=27017 이다. 그 다음으로 우리는 mongoose.connect안에다가 URL을 넣을것인데 순서는
'mongodb://localhost:포트번호/Database이름' 순서이다. 그리고 다음인자는 왜 적냐면 새로운 버전의 mongoose는 이런식으로 Configuration을 보낼수 있다.
그리고 인자들을 여기에 적어 놓는 이유는 이것들이 무슨역할을 하는지 알아서 그런게 아니라 내가 MongoDB를 사용할때 마다 물어봐서 그렇다(그렇게 중요하지 않다.)
mongoose.connect("mongodb://localhost:27017/we-tube", { userNewUrlParser: true, useFindAndModify:false});

그리고 다음으로 할것은 mongoDB와의 연결을 'db'로 저장한 후에 나중에 export 할것이다.
const db = mongoose.connection;

그리고 우리가 할것은 연결이 되었으면 되었다고 알려주고 안되면 왜안되는지 알려주는것이다.

const handleOpen = () => console.log("✔ Connected to DB");			//연결됨을 알리는 함수
const handleOpen = (error) => console.log(`❌ Error on DB Connection:${error}`);	//연결 안되면 왜안돼는지 알려주는함수

db.once("open", handleOpen);						//한번실행한다 오픈되면 handleopen을 
db.on("error", handleError);							//error가 뜨면 handleError함수를 실행

그리고 init.js에서 db만 임포트해준다.
import "./db" 
이렇게 해주면 우리는 Database와 연결되었다. 
이제 dotenv에 대해서 이야기 해보자 dotenv를 설치한 이유는 가끔 내가 어떤 부분을 숨겨 놓고 싶을수 있기 떄문이다.
지금은 localhost에 설치된 MongoDB이지만 다른 곳에 설치된다면 어떻게 될까? 내 코드에 있는 URL로 부터 유저 데이터를 보는걸 원하지 않을 것이다.
이때 dotenv를 사용하는것이다. 그건 다음영상에서 알아보자.
내가 오픈소스 프로젝트를 하고있다고 가정하고 내 DB를 숨겨놓고싶다. 이파일을 Github에 올려놓으면 어디에 DB가 있는지 알게 될것이다. 지금은 localhost라서 괜찮다.
그러나 실제 Application 으로 만들었을때 문제가 생긴다. 이때 dotenv를 사용한다.



